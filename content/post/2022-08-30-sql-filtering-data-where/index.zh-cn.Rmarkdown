---
title: SQL学习——数据过滤Filtering Data——WHERE子句
author: guoguo
date: '2022-08-30'
slug: index.zh-cn
categories:
  - 数据库操作
tags:
  - SQL
  - MySQL
  - R
lastmod: '2022-08-30T21:48:34+08:00'
keywords: []
description: ''
comment: yes
toc: no
autoCollapseToc: no
contentCopyright: no
reward: yes
mathjax: yes
---

<p style="text-indent:2em;font-size:;font-family:;">
今日学习SQL中WHERE子句，类似R中的filter()函数。SQL中可以结合AND&OR和比较运算符实现对数据表的过滤。
</p>

<!--more-->

```{r message=FALSE, warning=FALSE, include=FALSE}
# load packages
library(RMariaDB)

con = dbConnect(MariaDB(), 
                 user = "root", 
                 password = "123456", 
                 dbname = "mydb", 
                 host = "localhost")

dbListTables(con) # 查看 con 连接下的数据表
```

#### 1. SQL中的WHERE使用方法

```{sql connection=con}
# WHERE 结合 AND
SELECT
employee_id, 
first_name,
last_name,
salary
FROM
employees
WHERE
salary > 5000 AND salary < 10000
ORDER BY 
salary DESC;
```

```{sql connection=con}
# WHERE 结合 or
SELECT
employee_id, 
first_name,
last_name,
salary
FROM
employees
WHERE
salary < 5000 OR last_name = 'Chen'
ORDER BY 
salary DESC;
```

```{sql connection=con}
# WHERE 结合 BETWEEN
SELECT
employee_id, 
first_name,
last_name,
hire_date
FROM
employees
WHERE
hire_date
BETWEEN '1999-01-01' AND '2001-01-01'
ORDER BY
hire_date DESC;
```

#### 2. 在R中实现上述操作

```{r message=FALSE, warning=FALSE}
# 以上步骤都可以在R连接MySQL数据库的情况下，操作命令在R中实现
library(dplyr)
library(dbplyr)
data <- tbl(con, "employees") %>% # 通过dplyr函数tbl()查询数据表
  select(employee_id, first_name, last_name, hire_date) %>% # 选择对应列
  filter(between(hire_date, '1999-01-01', '2001-01-01')) %>% # R中同样有类似BETWEEN功能的between()函数
  arrange(desc(hire_date)) # 按照雇佣日期倒序排序
data
```

```{r message=FALSE, warning=FALSE}
# 以上步骤都可以在R连接MySQL数据库的情况下，操作命令在R中实现
library(dplyr)
library(dbplyr)
data <- tbl(con, "employees") %>% # 通过dplyr函数tbl()查询数据表
  select(employee_id, first_name, last_name, salary) %>% # 选择对应列
  filter(salary < 5000 | last_name == 'Chen') %>% # filter()实现WHERE功能
  arrange(desc(salary)) # 按照工资倒序排序
data
```
